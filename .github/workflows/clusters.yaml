name: cluster-deployment

on:
  workflow_dispatch:
    inputs:
      cluster-name:
        description: 'Enter EKS cluster name'
        required: true
        type: string
      tier:
        description: 'Choose deployment env'
        required: true
        default: 'stg'
        type: choice
        options:
          - eks_stg
          - eks_prod

env:
  AWS_REGION: us-west-1
  ECR_REPOSITORY: kubernetes-github-actions
  SHORT_SHA: $(echo ${{ github.sha }} | cut -c 1-8)

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - name: Clone
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Install awscli, eksctl. kubectl, helm
      run: |
        curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
        sudo mv /tmp/eksctl /usr/local/bin
        VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
        # https://github.com/aws/aws-cli/issues/6920#issuecomment-1117981158
        VERSION=v1.23.6
        curl https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl > kubectl
        sudo chmod +x kubectl
        sudo mv kubectl /usr/local/bin/ 

    - name: Deploy
      run: |
        eksctl create cluster --name ${{ inputs.cluster-name }} 
        AWS_ACCOUNT=`aws sts get-caller-identity --query Account --output text`
        aws eks update-kubeconfig --name ${{ inputs.cluster-name }}
        eksctl utils associate-iam-oidc-provider --region ${AWS_REGION} --cluster ${{ inputs.cluster-name }} --approve
        curl -o iam_policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.4.5/docs/install/iam_policy.json
        cat iam_policy.json
        aws iam create-policy --policy-name AWSLoadBalancerControllerIAMPolicy --policy-document file://iam_policy.json || true

        eksctl create iamserviceaccount \
          --cluster ${{ inputs.cluster-name }} \
          --namespace kube-system \
          --name aws-load-balancer-controller \
          --attach-policy-arn arn:aws:iam::"$AWS_ACCOUNT":policy/AWSLoadBalancerControllerIAMPolicy \
          --override-existing-serviceaccounts \
          --approve

        kubectl get sa aws-load-balancer-controller -n kube-system -o yaml
        kubectl apply -k "github.com/aws/eks-charts/stable/aws-load-balancer-controller/crds?ref=master"

        helm repo add eks https://aws.github.io/eks-charts
        helm repo update
        export VPC_ID=$(aws eks describe-cluster \
                --name ${{ inputs.cluster-name }} \
                --query "cluster.resourcesVpcConfig.vpcId" \
                --output text)
                
        export LBC_VERSION="v2.4.5"
        export LBC_CHART_VERSION="1.4.6"
        helm install aws-load-balancer-controller \
          eks/aws-load-balancer-controller \
          -n kube-system \
          --set clusterName=${{ inputs.cluster-name }} \
          --set serviceAccount.create=false \
          --set serviceAccount.name=aws-load-balancer-controller \
          --set image.tag="${LBC_VERSION}" \
          --set region=${{ env.AWS_REGION }} \
          --set vpcId=${VPC_ID} \
          --version="${LBC_CHART_VERSION}"

        kubectl -n kube-system rollout status deployment aws-load-balancer-controller
        
        
        eksctl create iamserviceaccount \
          --name ebs-csi-controller-sa \
          --namespace kube-system \
          --cluster ${{ inputs.cluster-name }} \
          --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy \
          --approve \
          --role-only \
          --role-name AmazonEKS_EBS_CSI_DriverRole || true
        eksctl create addon --name aws-ebs-csi-driver --cluster ${{ inputs.cluster-name }} --service-account-role-arn arn:aws:iam::"$AWS_ACCOUNT":role/AmazonEKS_EBS_CSI_DriverRole --force          
        
        kubectl create namespace prometheus
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo update
        helm upgrade -i prometheus prometheus-community/prometheus \
          --namespace prometheus \
          --set alertmanager.persistentVolume.storageClass="gp2",server.persistentVolume.storageClass="gp2"
          
          
