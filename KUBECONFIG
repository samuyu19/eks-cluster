apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: DATA+OMITTED
    server: https://7C9AC6F223FCE1C74EF1792B49FBE068.gr7.eu-west-3.eks.amazonaws.com
  name: kubernetes-github-actions.eu-west-3.eksctl.io
contexts:
- context:
    cluster: kubernetes-github-actions.eu-west-3.eksctl.io
    user: samuyu@kubernetes-github-actions.eu-west-3.eksctl.io
  name: samuyu@kubernetes-github-actions.eu-west-3.eksctl.io
current-context: samuyu@kubernetes-github-actions.eu-west-3.eksctl.io
kind: Config
preferences: {}
users:
- name: samuyu@kubernetes-github-actions.eu-west-3.eksctl.io
  user:
    exec:
      apiVersion: client.authentication.k8s.io/v1beta1
      args:
      - eks
      - get-token
      - --cluster-name
      - kubernetes-github-actions
      - --region
      - eu-west-3
      command: aws
      env:
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_PROFILE
        value: default
      interactiveMode: IfAvailable
      provideClusterInfo: false
